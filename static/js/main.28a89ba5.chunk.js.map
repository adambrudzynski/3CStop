{"version":3,"sources":["Components/List/fetchList.ts","Components/List/ListElement.tsx","Components/List/List.tsx","Components/List/sorter.ts","Components/Stop/gdanskFetcher.js","Components/Stop/gdyniaFetcher.js","Components/Stop/GdyniaStop.jsx","Components/Stop/Stop.tsx","Components/Map/Map.tsx","Components/List/Filter/LocationBtn.tsx","Components/List/Filter/Filter.jsx","utils/hooks.js","Components/Content.tsx","Components/ErrorBoundary/ErrorBoundary.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["today","Date","toISOString","slice","fetchLists","a","axios","all","get","then","spread","gdn","gdy","data","stops","concat","console","error","Error","fetcher","url","date","response","grouper","arr","groupBy","reduce","r","stopInTrips","stopsInTrip","group","groupArr","Object","entries","result","map","elem","array","propertyName","uniqueElems","filter","e","i","findIndex","routeId","object","fromEntries","lineNames","line","ListElement","index","style","key","stopId","className","activeIndex","overflow","borderBottom","onClick","manageActive","Label","size","color","operator","content","toUpperCase","stopName","stopCode","lines","circular","StopList","props","height","useState","visibility","setVisibility","handleUpdate","calculations","Visibility","onOnScreen","onUpdate","itemCount","length","itemSize","width","itemData","Dimmer","active","inverted","Loader","locationSorter","require","b","stopLocA","distance","stopLocB","comparison","fetchGdanskStop","id","fetch","contenttype","headers","charset","substring","indexOf","arrayBuffer","ab","dataView","DataView","decoded","TextDecoder","decode","includes","toDelete","table","replace","trim","split","shift","row","elements","shortName","headSign","delayDesc","message","fetchGdyniaStop","delay","log","GdyniaStop","stop","stopid","element","Stop","reset","gdyniaStop","setGdyniaStop","loading","setLoading","useEffect","getGdansk","getGdynia","Placeholder","Line","Button","floated","icon","StopMap","center","resetActiveIndex","currCenter","setCurrCenter","distFrom","markers","Math","round","to","stopLat","stopLon","in","sort","iconActive","Icon","iconUrl","iconSize","iconGdn","iconGdy","Map","animate","zoom","attributionControl","onMoveend","current","target","getCenter","lat","lng","handleMoveend","Marker","position","Popup","onClose","TileLayer","attribution","AttributionControl","initialMessage","type","LocationBtn","location","setMessage","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","latitude","longitude","accuracy","err","code","warn","setTimeout","basic","undefined","navigator","geolocation","getCurrentPosition","Filter","search","name","handleOperator","Menu","borderless","fixed","Item","fitted","Input","placeholder","link","value","onChange","toLowerCase","Dropdown","selection","text","getWindowDimensions","window","innerWidth","innerHeight","swrOptions","revalidateOnFocus","Content","contextRef","createRef","useSWR","stopTrips","setSearch","operators","setOperators","setLocation","process","setCenter","setActiveIndex","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","list","stopDesc","Responsive","maxWidth","minWidth","Ref","innerRef","Grid","columns","Column","Sticky","context","userLocation","remote","apply","format","msg","level","label","stacktrace","enableAll","ErrorBoundary","state","hasError","info","this","children","Component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.28a89ba5.chunk.js","sourcesContent":["import axios from 'axios'\nconst date = new Date()\nconst today = date.toISOString().slice(0, 10)\n\nconst fetchGdynia = () => {\n    return axios.get('https://cors.3cstop.workers.dev/?http://api.zdiz.gdynia.pl/pt/stops')\n}\nconst fetchGdansk = () => {\n    return axios.get('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/d3e96eb6-25ad-4d6c-8651-b1eb39155945/download/stopsingdansk.json')\n}\n\n\nexport const fetchLists = async () => {\n    try {\n\n        return axios.all([fetchGdansk(), fetchGdynia()])\n            .then(axios.spread(function (gdn: any, gdy: any) {\n                return gdn.data.stops.concat(gdy.data)\n            }));\n    }\n    catch (err) {\n        console.error(err)\n        throw new Error(err)\n    }\n}\n\nconst fetcher = async (url: string, date: string) => {\n    const response = await axios.get(url)\n    const data = response.data[date]\n    return data\n}\n\nconst grouper = (arr: any, groupBy: string) => {\n    return arr.reduce((r: any, a: any) => {\n        r[a[groupBy]] = [...r[a[groupBy]] || [], a];\n        return r;\n    }, {});\n}\n\nconst unique = (array: any, propertyName: string) => {\n    return array.filter((e: any, i: number) => array.findIndex((a: any) => a[propertyName] === e[propertyName]) === i);\n}\n\nexport const stopInTrips = async () => {\n    const response = await fetcher('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/3115d29d-b763-4af5-93f6-763b835967d6/download/stopsintrips.json', today)\n    const data = response.stopsInTrip\n    let group = grouper(data, 'stopId')\n    let groupArr = Object.entries(group)\n\n    let result = groupArr.map((elem: any) => {\n        const uniqueElems = unique(elem[1], 'routeId').reduce((r: any, a: any) => {\n            r = [...r || [], a.routeId];\n            return r;\n        }, []);\n        return [[elem[0]], uniqueElems]\n    })\n\n    let object = Object.fromEntries(result)\n    // console.log(\"Obje\", object);\n    // console.log(\"group\", result);\n    return object\n}\n\nconst trips = async () => {\n    const response = await fetcher('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/b15bb11c-7e06-4685-964e-3db7775f912f/download/trips.json', today)\n    const data = response.trips\n    return data\n}\n\nconst routes = async () => {\n    const response = await fetcher('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/22313c56-5acf-41c7-a5fd-dc5dc72b3851/download/routes.json', today)\n    const data = response.routes\n    return data\n}\n\nexport const lines = async () => {\n    const stopTrip = await stopInTrips()\n    const trip = await trips()\n    const route = await routes()\n\n    const array = Object.entries(stopTrip).slice(0, 10)\n    const result = array.map((stop: any) => {\n        const modifiedStop = stop[1].map((oneTrip: any) => {\n\n            let filteredRoutes = route.filter((oneRoute: any) => {\n                return oneRoute.routeId === oneTrip\n            })\n            return filteredRoutes\n        })\n        return { [stop[0]]: modifiedStop }\n    })\n    console.log(result);\n}\n\nexport const lineNames = (line: number) => {\n    if (line === 10603) {\n        return 'K'\n    } else if (line === 10605) {\n        return 'R'\n    } else if (line === 10606) {\n        return 'S'\n    } else if (line === 10609) {\n        return 'Z'\n    } else if (line === 10602) {\n        return 'J'\n    } else if (line >= 10000 && line < 10500 && line > 10399) {\n        return `N${line - 10000 - 400}`\n    } else if (line < 500 && line > 399) {\n        return `N${line - 400}`\n    }\n    else if (line >= 10000) {\n        return line - 10000\n    }\n    else if (line < 900 && line > 799) {\n        return `T${line - 800}`\n    }\n    return line\n}","import React from 'react'\nimport { Label } from 'semantic-ui-react'\nimport { ListChildComponentProps } from 'react-window'\nimport { lineNames } from './fetchList';\n\n\nconst ListElement = ({ index, style, data }: ListChildComponentProps) => {\n    return <div key={data.stops[index].stopId}\n        className={data.stops[index].stopId === data.activeIndex ? 'main-list__item--active' : 'main-list__item'}\n        style={{\n            overflow: 'hidden',\n            borderBottom: '1px solid lightgrey',\n            ...style\n        }}\n        onClick={() => data.manageActive(data.stops[index])}\n    >\n        <Label size='tiny' color={data.stops[index].operator === 'ztm' ? 'red' : 'blue'} content={data.stops[index].operator.toUpperCase()} />\n        {data.stops[index].stopName + ' ' || data.stops[index].stopDesc + ' '}\n        {data.stops[index].stopCode && data.stops[index].stopCode}\n        {/* {data.stops[index].distance && <Label circular color='olive' size='tiny' content={`${data.stops[index].distance >= 1000 ? (Math.round(data.stops[index].distance / 100)) / 10 + 'km' : data.stops[index].distance + 'm'}`} />} */}\n        {data.lines && data.lines[data.stops[index].stopId]\n            ? <> {data.lines[data.stops[index].stopId].map((line: any) => <Label key={line} circular size='tiny' content={lineNames(line)} />)} </>\n            : null}\n    </div>\n\n}\nexport default ListElement","import React, { useState } from 'react'\nimport { Dimmer, Loader, Visibility } from 'semantic-ui-react'\nimport { FixedSizeList as List } from 'react-window';\nimport ListElement from './ListElement'\n\n\nconst StopList = (props: any) => {\n    const { stops, manageActive, activeIndex, lines, height }: any = props\n    const [visibility, setVisibility] = useState<any>(350)\n\n    const handleUpdate = (e: any, { calculations }: any): void => setVisibility(calculations)\n\n    if (!stops) {\n        return <Dimmer active inverted>\n            <Loader inverted content='Pobieranie listy przystanków' />\n        </Dimmer>\n\n    }\n    return <Visibility onOnScreen={handleUpdate} onUpdate={handleUpdate}>\n        <List\n            height={height || 850}\n            itemCount={stops.length}\n            itemSize={50}\n            width={visibility.width}\n            itemData={{\n                stops,\n                manageActive,\n                lines,\n                activeIndex\n            }}\n        >\n            {ListElement}\n        </List>\n    </Visibility>\n\n}\n\nexport { StopList }","const distFrom = require('distance-from')\n\nexport const sorter = (a: Object | any, b: Object | any) => {\n    const stopNameA = a.stopDesc.toUpperCase();\n    const stopNameB = b.stopDesc.toUpperCase();\n    let comparison = 0;\n    if (stopNameA > stopNameB) {\n        comparison = 1;\n    } else if (stopNameA < stopNameB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nexport const locationSorter = (a: Object | any, b: Object | any) => {\n    const stopLocA = a.distance;\n    const stopLocB = b.distance;\n    \n    let comparison = 0;\n    if (stopLocA > stopLocB) {\n        comparison = 1;\n    } else if (stopLocA < stopLocB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n","export const fetchGdanskStop = (id) => {\n    const corsProxy = 'https://cors.3cstop.workers.dev/?'\n    const url = `${corsProxy}https://ztm.gda.pl/rozklady/pobierz_SIP.php?n[0]=${id}`\n    return fetch(url)\n        .then(response => {\n            const contenttype = response.headers.get(\"content-type\");\n            const charset = contenttype.substring(contenttype.indexOf(\"charset=\") + 8);\n            return response.arrayBuffer()\n                .then(ab => {\n                    const dataView = new DataView(ab);\n                    const decoder = new TextDecoder(charset);\n                    const decoded = decoder.decode(dataView);\n\n                    if (decoded.includes('</table>')) {\n                        const toDelete = decoded.slice(decoded.indexOf('</table>'))\n                        const table = decoded.replace(`<!-- p --><div style=\"background: #fff; margin-top: 1em; margin-bottom: 1em;\"><table class=\"sip\">`, '').trim().replace(`<tr><th class=\"naglowek\">Linia</th><th class=\"naglowek\" style=\"min-width:200px;\">Kierunek</th><th class=\"naglowek\">Odjazd</th></tr>`, '').trim().replace(toDelete, '').split('<tr>')\n                        if (table[0].length < 5) table.shift()\n                        const result = table.map(row => {\n                            const elements = row.replace('</td>', '').replace('</td>', '').replace('</td></tr>', '').split('<td>')\n                            if (elements[0].length < 5) elements.shift()\n                            return {\n                                shortName: elements[0].replace('<span class=\"juz\">', '').replace('</span>', ''),\n                                headSign: elements[1].replace('<span class=\"juz\">', '').replace('</span>', ''),\n                                delayDesc: elements[2].includes('&nbsp') ? '>>>' : elements[2]\n                            }\n                        })\n                        // console.log('HTML', decoded)\n                        // console.log('result', result);\n\n                        return result\n                    }\n                    return {message:'Brak odjazdów z wybranego przystanku'}\n                })\n        })\n}\n","import axios from 'axios'\n\nexport const fetchGdyniaStop = async (id) => {\n    try {\n        const corsProxy = 'https://cors.3cstop.workers.dev/?'\n        const url=`${corsProxy}https://zkmgdynia.pl/stopsAPI/getDisplay/${id}`;\n        const { data } = await axios.get(url);\n        return data.delay\n    }\n    catch (err) {\n        console.log(err);  \n    }\n}","import React from 'react'\n\nexport const GdyniaStop = ({ stop, stopid }) => {\n\n    if (stop && stop.length > 1) {\n\n        return <table>\n            <thead><tr><th>Linia</th><th>Kierunek</th><th>Odjazd</th></tr></thead>\n            <tbody>{stop.map(element => {\n                return <tr key={element.delay + stopid + element.delayDesc}><td>{element.shortName}</td><td>{element.headSign}</td><td>{element.delayDesc}</td></tr>\n            })}</tbody>\n        </table>\n\n    }\n    else return <div>Brak odjazdów z wybranego przystanku</div>\n\n}","import React, { useState, useEffect } from 'react'\nimport { fetchGdanskStop } from './gdanskFetcher';\nimport { fetchGdyniaStop } from './gdyniaFetcher';\nimport { GdyniaStop } from './GdyniaStop';\nimport { Placeholder, Button } from 'semantic-ui-react';\n\ninterface Delay {\n    shortName?: string,\n    headSign?: string,\n    delayDesc?: string,\n    message?: string\n}\n\nexport const Stop: Function = ({ stopId, reset }: any): JSX.Element[] | JSX.Element | null => {\n    const [gdyniaStop, setGdyniaStop] = useState<null | Array<Delay> | Delay>(null)\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        if (stopId < 30000) {\n            getGdansk(stopId)\n        }\n        else { getGdynia(stopId) }\n\n    }, [stopId])\n\n    const getGdansk = async (id: number) => {\n        setLoading(true)\n        const stop = await fetchGdanskStop(id)\n        setGdyniaStop(stop)\n        setLoading(false)\n    }\n\n    const getGdynia = async (id: number) => {\n        setLoading(true)\n        const stop = await fetchGdyniaStop(id)\n        setGdyniaStop(stop)\n        setLoading(false)\n    }\n    if (!stopId) return null\n\n    return loading ?\n        <Placeholder>\n            <Placeholder.Line />\n            <Placeholder.Line />\n            <Placeholder.Line />\n            <Placeholder.Line />\n            <Placeholder.Line />\n        </Placeholder>\n\n        : <div className='stop'>\n            {reset && <Button floated='right' icon='cancel' circular onClick={reset} />}\n            <GdyniaStop stopid={stopId} stop={gdyniaStop} />\n        </div>\n}","import React, { useState } from \"react\";\nimport { Map, Marker, Popup, TileLayer, AttributionControl } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { locationSorter } from \"../List/sorter\";\nimport { Stop } from \"../Stop/Stop\";\n\nconst StopMap: Function = ({ stops, center, manageActive, activeIndex, resetActiveIndex }: any): JSX.Element[] | JSX.Element => {\n\n    const [currCenter, setCurrCenter] = useState(center)\n\n    const handleMoveend = (e: any) => {\n        const current = e.target.getCenter()\n        setCurrCenter([current.lat, current.lng])\n    }\n\n    const distFrom = require('distance-from')\n\n    const markers = stops ?\n        stops.\n            map((stop: any) => {\n                stop.distance = Math.round(distFrom(currCenter).to([stop.stopLat, stop.stopLon]).in('m'))\n                return stop\n            })\n            .sort(locationSorter)\n            .slice(0, 80)\n        : null\n\n    const iconActive = new Icon({\n        iconUrl: '/3CStop/assets/map-active.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdn = new Icon({\n        iconUrl: '/3CStop/assets/map-gdn.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdy = new Icon({\n        iconUrl: '/3CStop/assets/map-gdy.svg',\n        iconSize: [25, 30],\n    })\n    const iconFav = new Icon({\n        iconUrl: '/3CStop/assets/map-fav.svg',\n        iconSize: [25, 25],\n    })\n\n    return (\n        <Map\n            animate\n            center={center}\n            zoom={15}\n            attributionControl={false}\n            onMoveend={(e: any) => handleMoveend(e)}>\n            {markers && markers.map((stop: any) => (\n                <Marker\n                    key={stop.stopId}\n                    position={\n                        [stop.stopLat, stop.stopLon]\n                    }\n                    onClick={() => {\n                        manageActive(stop)\n                    }}\n\n                    icon={activeIndex && stop.stopId === activeIndex\n                        ? iconActive\n                        : stop.operator === 'zkm' ? iconGdy : iconGdn}\n                />\n            ))}\n            {activeIndex && (\n                <Popup\n                    position={center}\n                    onClose={() => {\n                        resetActiveIndex();\n                    }}\n                >\n                    <Stop stopId={activeIndex} />\n                </Popup>\n            )}\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <AttributionControl position=\"topright\" />\n        </Map>\n    );\n}\n\n\nexport default StopMap","import React, { useState } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\ninterface MessageType {\n    type: \"grey\" | \"red\" | \"orange\" | \"yellow\" | \"olive\" | \"green\" | \"teal\" | \"blue\" | \"violet\" | \"purple\" | \"pink\" | \"brown\" | \"black\" | undefined;\n    message: string | null\n}\n\ntype AppProps = { location: (location: Array<[Number, Number]>) => void }\n\nconst initialMessage: MessageType = {\n    type: 'grey',\n    message: ''\n}\n\nexport const LocationBtn = ({ location }: AppProps) => {\n    const [message, setMessage] = useState<MessageType>(initialMessage)\n\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n    };\n\n    const success = (pos: Object | any) => {\n        const crd = pos.coords;\n        setMessage({\n            type: 'green',\n            message: `${crd.latitude}, ${crd.longitude}`\n        })\n        location([crd.latitude, crd.longitude])\n        console.log('Your current position is:');\n        console.log(`Latitude : ${crd.latitude}`);\n        console.log(`Longitude: ${crd.longitude}`);\n        console.log(`More or less ${crd.accuracy} meters.`);\n    }\n\n    const error = (err: Object | any) => {\n        setMessage({\n            type: 'red',\n            message: `ERROR(${err.code}): ${err.message}`\n        })\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n        if (message.type === 'red') {\n            setTimeout(() => {\n                setMessage({\n                    type: 'grey',\n                    message: null\n                })\n            }, 3500);\n        }\n    }\n    const getLocation = () => {\n        navigator.geolocation.getCurrentPosition(success, error, options);\n    }\n\n    return <Button\n        basic\n        icon='location arrow'\n        color={message.type || undefined}\n        onClick={getLocation} >\n    </Button>\n}","import React from 'react'\nimport { Input, Dropdown, Icon, Menu } from 'semantic-ui-react'\nimport { LocationBtn } from './LocationBtn';\n\nconst Filter = ({ search, name, operator, handleOperator, location }) => {\n\n    const handleChange = ({ target }) => {\n        search(target.value.toLowerCase());\n    }\n\n    const handleClear = () => {\n        search('')\n    }\n\n    const handleDropdownChange = (e, { value }) => {\n        console.log(value);\n        handleOperator(value)\n\n    }\n\n    const options = [\n        { key: 'ztm', text: 'ZTM Gdańsk', value: 'ztm' },\n        { key: 'zkm', text: 'ZKM Gdynia', value: 'zkm' },\n        { key: 'all', text: 'Wszyscy', value: 'all' }\n    ]\n\n    return <Menu\n        borderless\n        fixed='bottom'>\n        <Menu.Item fitted >\n            <LocationBtn location={location} />\n        </Menu.Item>\n        <Menu.Item fitted >\n            <Input\n                placeholder='Wyszukaj...'\n                name='search'\n                icon={name.length > 0 && <Icon name='cancel' circular link onClick={handleClear} />}\n                value={name}\n                onChange={handleChange}\n            />\n        </Menu.Item>\n        <Menu.Item fitted position='right'>\n            <Dropdown\n\n                placeholder='Przewoźnik'\n                selection\n                options={options}\n                onChange={handleDropdownChange}\n                value={operator}\n            />\n        </Menu.Item>\n        </Menu>\n}\n\nexport { Filter }\n","import { useState, useEffect } from 'react';\n\nexport function getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  // const effect = effectParam === undefined ? null : effectParam\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { createRef, useState, useEffect } from 'react'\nimport useSWR from 'swr'\nimport { Grid, Ref, Sticky, Responsive } from 'semantic-ui-react'\n\nimport { StopList } from './List/List'\nimport StopMap from './Map/Map'\nimport { Filter } from './List/Filter/Filter'\nimport { locationSorter } from './List/sorter'\nimport { fetchLists, stopInTrips } from './List/fetchList'\nimport { Stop } from './Stop/Stop'\nimport { getWindowDimensions } from '../utils/hooks'\n\nconst swrOptions = {\n    revalidateOnFocus: false\n}\n\nconst Content: Function = (): JSX.Element[] | JSX.Element => {\n    const contextRef = createRef()\n    const { data: stops } = useSWR(\" \", fetchLists, swrOptions)\n    const { data: stopTrips } = useSWR(\"stopInTrips\", stopInTrips, swrOptions)\n    const [search, setSearch] = useState<string>('')\n    const [operators, setOperators] = useState<string>('all')\n    const [location, setLocation] = useState<[number, number] | null>(null)\n    const [center, setCenter] = useState<[number | string | undefined, number | string | undefined]>([process.env.REACT_APP_DEFAULT_LOC_CENTER_LAT, process.env.REACT_APP_DEFAULT_LOC_CENTER_LON])\n    const [activeIndex, setActiveIndex] = useState<number | null>(null)\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    const handleSearch = (search: string) => {\n        setSearch(search)\n    }\n\n    const handleOperator = (operator: string) => {\n        setOperators(operator)\n    }\n\n    const handleLocation = (userLocation: [number, number]) => {\n        setLocation(userLocation);\n        setCenter(userLocation)\n    }\n\n    const manageActive = (stop: any) => {\n        setActiveIndex(stop.stopId)\n        setCenter([stop.stopLat, stop.stopLon])\n    }\n\n    const resetActiveIndex = () => {\n        setActiveIndex(null)\n    }\n\n    const distFrom = require('distance-from')\n\n    const list = stops && stops\n        .map((stop: any) => {\n            stop.distance = location && Math.round(distFrom(location).to([stop.stopLat, stop.stopLon]).in('m'))\n            stop.operator = stop.stopId < 30000 ? 'ztm' : 'zkm'\n            return stop\n        })\n        .sort(locationSorter)\n        .filter((stop: any) => {\n            if (operators === 'all') {\n                return stop\n            }\n            return operators === stop.operator\n        })\n        .filter((stop: any) => {\n            const stopName = stop.stopName ? stop.stopName.toLowerCase() : stop.stopDesc.toLowerCase()\n            return stopName.includes(search)\n        })\n\n    return <>\n            <Responsive maxWidth={550}>\n                <StopList\n                    height={windowDimensions.height - 40}\n                    stops={list}\n                    lines={stopTrips}\n                    activeIndex={activeIndex}\n                    manageActive={manageActive} />\n                <Stop stopId={activeIndex} reset={resetActiveIndex} />\n            </Responsive>\n            <Responsive minWidth={551} >\n                <Ref innerRef={contextRef}>\n                    <Grid columns={2} >\n                        <Grid.Column>\n                            <StopList\n                                height={windowDimensions.height - 40}\n                                stops={list}\n                                lines={stopTrips}\n                                activeIndex={activeIndex}\n                                manageActive={manageActive} />\n\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Sticky context={contextRef}>\n                                <StopMap\n                                    stops={list}\n                                    center={center}\n                                    activeIndex={activeIndex}\n                                    manageActive={manageActive}\n                                    resetActiveIndex={resetActiveIndex} />\n                            </Sticky>\n                        </Grid.Column>\n\n                    </Grid>\n                </Ref>\n            </Responsive>\n        <Filter\n            search={handleSearch}\n            handleOperator={handleOperator}\n            operator={operators}\n            name={search}\n            location={handleLocation} />\n    </>\n}\nexport default Content","import React, { Component } from 'react';\nimport log from 'loglevel';\nimport remote from 'loglevel-plugin-remote';\n\nconst customJSON = log => ({\nmsg: log.message,\nlevel: log.level.label,\nstacktrace: log.stacktrace\n});\n\nremote.apply(log, { format: customJSON, url: 'https://cstop-eb35a.firebaseio.com/error/build.json' });\nlog.enableAll();\n\nclass ErrorBoundary extends Component {\n constructor(props) {\n  super(props);\n  this.state = { hasError: false };\n}\n\nstatic getDerivedStateFromError(error) {\n  // Update state so the next render will show the fallback UI.\n  return { hasError: true };\n}\n\ncomponentDidCatch(error, info) {\n  // log the error to our server with loglevel\n  log.error({ error, info });\n}\n\nrender() {\n if (this.state.hasError) {\n  // You can render any custom fallback UI\n  return <h1>Something went wrong.</h1>;\n }\n\n return this.props.children;\n}\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app.css'\nimport Content from './Components/Content';\nimport ErrorBoundary from './Components/ErrorBoundary/ErrorBoundary';\n\n\nconst App = () => {\n  return (\n    <ErrorBoundary >\n      <Content key='list' />\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}