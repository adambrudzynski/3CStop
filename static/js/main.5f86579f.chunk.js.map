{"version":3,"sources":["Components/Stop/gdanskFetcher.js","Components/Stop/gdyniaFetcher.js","Components/Stop/GdyniaStop.jsx","Components/Stop/Stop.jsx","Components/List/ListElement.tsx","Components/List/List.tsx","Components/List/sorter.ts","Components/Map/Map.tsx","Components/List/Filter/LocationBtn.tsx","Components/List/Filter/Filter.jsx","Components/List/fetchList.ts","Components/Content.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["fetchGdanskStop","id","url","fetch","then","response","contenttype","headers","get","charset","substring","indexOf","arrayBuffer","ab","dataView","DataView","TextDecoder","decode","replace","fetchGdyniaStop","a","axios","data","delay","console","log","GdyniaStop","stop","stopid","table","map","element","key","shortName","headSign","delayDesc","style","minWidth","Stop","stopId","useState","setTable","gdyniaStop","setGdyniaStop","loading","setLoading","useEffect","getGdansk","getGdynia","__html","placeholder","Placeholder","Line","dangerouslySetInnerHTML","ListElement","activeIndex","manageActive","refs","Accordion","Title","active","index","onClick","Label","size","color","content","stopName","stopCode","circular","distance","Math","round","Content","StopList","stops","list","fluid","className","Dimmer","inverted","Loader","locationSorter","require","b","stopLocA","stopLocB","comparison","StopMap","center","currCenter","setCurrCenter","distFrom","markers","to","stopLat","stopLon","in","sort","slice","iconGdn","Icon","iconUrl","iconSize","iconGdy","Map","animate","zoom","attributionControl","onMoveend","e","current","target","getCenter","lat","lng","handleMoveend","Marker","position","icon","TileLayer","attribution","AttributionControl","initialMessage","type","message","LocationBtn","location","setMessage","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","latitude","longitude","accuracy","error","err","code","warn","setTimeout","Button","basic","undefined","navigator","geolocation","getCurrentPosition","Filter","search","name","operator","handleOperator","Menu","compact","borderless","fixed","Item","fitted","Input","length","link","value","onChange","toLowerCase","Dropdown","selection","text","fetchLists","all","spread","gdn","gdy","concat","Error","swrOptions","revalidateOnFocus","contextRef","createRef","useSWR","setSearch","operators","setOperators","setLocation","process","setCenter","setActiveIndex","filter","stopDesc","includes","Segment","Group","Responsive","maxWidth","Ref","innerRef","Grid","columns","Column","Sticky","context","userLocation","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5f86579f.chunk.js","sourcesContent":["export const fetchGdanskStop = (id) => {\n    const toDelete = '<p style=\"font-size: 8pt; font-style:italic;margin-top: 0;text-align:center;\">Źródło danych: narzędzie oprogramowania SIP opracowane przez <a href=\"http://www.gmv.com\">GMV</a></p>'\n    const corsProxy = 'https://cors.3cstop.workers.dev/?'\n    const url = `${corsProxy}https://ztm.gda.pl/rozklady/pobierz_SIP.php?n[0]=${id}`\n    return fetch(url)\n        .then(response => {\n            const contenttype = response.headers.get(\"content-type\");\n            const charset = contenttype.substring(contenttype.indexOf(\"charset=\") + 8);\n            return response.arrayBuffer()\n                .then(ab => {\n                    const dataView = new DataView(ab);\n                    const decoder = new TextDecoder(charset);\n                    const decoded = decoder.decode(dataView);\n                    return decoded.replace(toDelete, '')\n                })\n        })\n}","import axios from 'axios'\n\nexport const fetchGdyniaStop = async (id) => {\n    try {\n        const corsProxy = 'https://cors.3cstop.workers.dev/?'\n        const url=`${corsProxy}https://zkmgdynia.pl/stopsAPI/getDisplay/${id}`;\n        const { data } = await axios.get(url);\n        return data.delay\n    }\n    catch (err) {\n        console.log(err);  \n    }\n}","import React from 'react'\n\nexport const GdyniaStop = ({ stop, stopid }) => {\n\n    const table = stop.map(element => {     \n        return <tr key={element.delay+stopid}><td>{element.shortName}</td><td>{element.headSign}</td><td>{element.delayDesc}</td></tr>\n    })\n\n    return <div><table>\n        <thead><tr><th>Linia</th><th style={{minWidth:\"200px\"}}>Kierunek</th><th>Odjazd</th></tr></thead>\n        <tbody>{table}</tbody>\n    </table>\n    </div>\n\n}","import React, { useState, useEffect } from 'react'\nimport { fetchGdanskStop } from './gdanskFetcher';\nimport { fetchGdyniaStop } from './gdyniaFetcher';\nimport { GdyniaStop } from './GdyniaStop';\nimport { Placeholder } from 'semantic-ui-react';\n\nexport const Stop = ({ stopId }) => {\n    const [table, setTable] = useState(null);\n    const [gdyniaStop, setGdyniaStop] = useState(null)\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        if (stopId < 30000) {\n            getGdansk(stopId)\n        }\n        else { getGdynia(stopId) }\n\n    }, [stopId])\n\n    const getGdansk = async (id) => {\n        setLoading(true)\n        const stop = await fetchGdanskStop(id)\n        setTable({\n            __html: stop\n        })\n        setLoading(false)\n    }\n\n    const getGdynia = async (id) => {\n        setLoading(true)\n        const stop = await fetchGdyniaStop(id)\n        setGdyniaStop(stop)\n        setLoading(false)\n    }\n    const placeholder = <Placeholder>\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n        <Placeholder.Line />\n    </Placeholder>\n\n    return loading ?\n        <>   {placeholder}</>\n        : (gdyniaStop\n            ? <GdyniaStop stopid={stopId} stop={gdyniaStop} />\n            : <div dangerouslySetInnerHTML={table}></div>)\n}","import React, { useState, Fragment, useRef } from 'react'\nimport { Accordion, Label } from 'semantic-ui-react'\nimport { Stop } from '../Stop/Stop'\n\nexport const ListElement = ({ stop, activeIndex, manageActive, refs }: any) => {\n    const [colapsed, setColapsed] = useState(true)\n    // const stopRef: any = useRef()\n\n    const handleClick = () => {\n        manageActive(stop)\n        console.log(stop)\n        // if (!colapsed) {\n        //     stopRef.current.scrollIntoView({\n        //         behavior: 'smooth',\n        //         block: 'start',\n        //     });\n        // }\n    }\n\n    return <Fragment key={stop.stopId}>\n        <Accordion.Title\n            // as='div'\n            active={activeIndex === stop.stopId}\n            index={stop.stopId}\n            onClick={handleClick}>\n            {stop.stopId >= 30000\n                ? <>\n                    <Label size='tiny' color='blue' content={'ZKM'} />\n                    {stop.stopName}\n                    {stop.stopCode && <Label circular size='tiny' content={stop.stopCode} />}\n                    {stop.distance && <Label circular color='olive' size='tiny' content={`${stop.distance >= 1000 ? (Math.round(stop.distance / 100)) / 10 + 'km' : stop.distance + 'm'}`} />}\n                </>\n                : <>\n                    <Label size='tiny' color='red' content={'ZTM'} />\n                    {stop.stopName}\n                    {stop.stopCode && <Label circular size='tiny' content={stop.stopCode} />}\n                    {stop.distance && <Label circular color='yellow' size='tiny' content={`${stop.distance >= 1000 ? (Math.round(stop.distance / 100)) / 10 + 'km' : stop.distance + 'm'}`} />}\n                </>\n            }\n        </Accordion.Title>\n        <Accordion.Content\n            // as={'div'}\n            active={activeIndex === stop.stopId} >\n            {activeIndex === stop.stopId &&\n                <Stop stopId={stop.stopId} />}\n        </Accordion.Content>\n    </Fragment>\n\n}","import React from 'react'\nimport { Accordion, Dimmer, Loader } from 'semantic-ui-react'\nimport { ListElement } from './ListElement'\n\nconst StopList = ({ stops, manageActive, activeIndex }: any) => {\n\n    const list = stops ?\n        stops.map((stop: any) => <ListElement\n            key={stop.stopId}\n            stop={stop}\n            activeIndex={activeIndex}\n            manageActive={manageActive} />)\n        : null\n\n    if (!stops) {\n        return <Dimmer active inverted>\n            <Loader inverted content='Pobieranie listy przystanków' />\n        </Dimmer>\n\n    }\n    return <>\n        <Accordion fluid className=\"main-list\">\n            {list}\n        </Accordion>\n    </>\n}\n\nexport { StopList }","const distFrom = require('distance-from')\n\nexport const sorter = (a: Object | any, b: Object | any) => {\n    const stopNameA = a.stopDesc.toUpperCase();\n    const stopNameB = b.stopDesc.toUpperCase();\n    let comparison = 0;\n    if (stopNameA > stopNameB) {\n        comparison = 1;\n    } else if (stopNameA < stopNameB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nexport const locationSorter = (a: Object | any, b: Object | any) => {\n    const stopLocA = a.distance;\n    const stopLocB = b.distance;\n    \n    let comparison = 0;\n    if (stopLocA > stopLocB) {\n        comparison = 1;\n    } else if (stopLocA < stopLocB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n","import React, { useState } from \"react\";\nimport { Map, Marker, Popup, TileLayer, AttributionControl } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { locationSorter } from \"../List/sorter\";\n\nconst StopMap: Function = ({ stops, center, manageActive, activeIndex }: any): JSX.Element[] | JSX.Element => {\n\n    const [currCenter, setCurrCenter] = useState(center)\n\n    const handleMoveend = (e: any) => {\n        const current = e.target.getCenter()\n        setCurrCenter([current.lat, current.lng])\n    }\n\n    const distFrom = require('distance-from')\n\n    const markers = stops ?\n        stops.\n            map((stop: any) => {\n                stop.distance = Math.round(distFrom(currCenter).to([stop.stopLat, stop.stopLon]).in('m'))\n                return stop\n            })\n            .sort(locationSorter)\n            .slice(0, 80)\n        : null\n\n    const iconActive = new Icon({\n        iconUrl: '/3CStop/assets/maps-active.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdn = new Icon({\n        iconUrl: '/3CStop/assets/map-gdn.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdy = new Icon({\n        iconUrl: '/3CStop/assets/map-gdy.svg',\n        iconSize: [25, 30],\n    })\n    const iconFav = new Icon({\n        iconUrl: '/3CStop/assets/map-fav.svg',\n        iconSize: [25, 25],\n    })\n\n    return (\n        <Map\n            animate\n            center={center}\n            zoom={14}\n            attributionControl={false}\n            onMoveend={(e: any) => handleMoveend(e)}>            \n            {markers && markers.map((stop: any) => (\n                <Marker\n                    key={stop.stopId}\n                    position={\n                        [stop.stopLat, stop.stopLon]\n                    }\n                    onClick={() => {\n                        manageActive(stop)\n                    }}\n\n                    icon={stop.stopId > 30000 ? iconGdy : iconGdn}\n                />\n            ))}\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <AttributionControl position=\"topright\" />\n        </Map>\n    );\n}\n\n\nexport default StopMap","import React, { useState } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\ninterface MessageType {\n    type: \"grey\" | \"red\" | \"orange\" | \"yellow\" | \"olive\" | \"green\" | \"teal\" | \"blue\" | \"violet\" | \"purple\" | \"pink\" | \"brown\" | \"black\" | undefined;\n    message: string | null\n}\n\ntype AppProps = { location: (location: Array<[Number, Number]>) => void }\n\nconst initialMessage: MessageType = {\n    type: 'grey',\n    message: ''\n}\n\nexport const LocationBtn = ({ location }: AppProps) => {\n    const [message, setMessage] = useState<MessageType>(initialMessage)\n\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n    };\n\n    const success = (pos: Object | any) => {\n        const crd = pos.coords;\n        setMessage({\n            type: 'green',\n            message: `${crd.latitude}, ${crd.longitude}`\n        })\n        location([crd.latitude, crd.longitude])\n        console.log('Your current position is:');\n        console.log(`Latitude : ${crd.latitude}`);\n        console.log(`Longitude: ${crd.longitude}`);\n        console.log(`More or less ${crd.accuracy} meters.`);\n    }\n\n    const error = (err: Object | any) => {\n        setMessage({\n            type: 'red',\n            message: `ERROR(${err.code}): ${err.message}`\n        })\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n        if (message.type === 'red') {\n            setTimeout(() => {\n                setMessage({\n                    type: 'grey',\n                    message: null\n                })\n            }, 3500);\n        }\n    }\n    const getLocation = () => {\n        navigator.geolocation.getCurrentPosition(success, error, options);\n    }\n\n    return <Button\n        basic\n        icon='location arrow'\n        color={message.type || undefined}\n        onClick={getLocation} >\n    </Button>\n}","import React from 'react'\nimport { Input, Dropdown, Icon, Menu } from 'semantic-ui-react'\nimport { LocationBtn } from './LocationBtn';\n\nconst Filter = ({ search, name, operator, handleOperator, location }) => {\n    const handleChange = ({ target }) => {\n        search(target.value.toLowerCase());\n    }\n\n    const handleClear = () => {\n        search('')\n    }\n\n    const handleDropdownChange = (e, { value }) => {\n        console.log(value);\n        handleOperator(value)\n\n    }\n\n    const options = [\n        { key: 'ztm', text: 'ZTM Gdańsk', value: 'ztm' },\n        { key: 'zkm', text: 'ZKM Gdynia', value: 'zkm' },\n        { key: 'all', text: 'Wszyscy', value: 'all' }\n    ]\n\n    return <Menu compact borderless fixed='bottom' >\n        <Menu.Item fitted >\n            <LocationBtn location={location}/>\n        </Menu.Item>\n        <Menu.Item fitted >\n            <Input\n                placeholder='Wyszukaj...'\n                name='search'\n                icon={name.length > 0 && <Icon name='cancel' circular link onClick={handleClear} />}\n                value={name}\n                onChange={handleChange}\n            />\n        </Menu.Item>\n        <Menu.Item fitted position='right'>\n            <Dropdown\n\n                placeholder='Przewoźnik'\n                selection\n                options={options}\n                onChange={handleDropdownChange}\n                value={operator}\n            />\n        </Menu.Item>\n    </Menu>\n\n}\n\nexport { Filter }\n","import axios from 'axios'\n\nconst fetchGdynia = () => {\n    return axios.get('https://cors.3cstop.workers.dev/?http://api.zdiz.gdynia.pl/pt/stops')\n}\nconst fetchGdansk = () => {\n    return axios.get('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/d3e96eb6-25ad-4d6c-8651-b1eb39155945/download/stopsingdansk.json')\n}\n\n\nexport const fetchLists = async () => {\n    try {\n\n        return axios.all([fetchGdansk(), fetchGdynia()])\n            .then(axios.spread(function (gdn: any, gdy: any) {\n                console.log('gdansk', gdn.data.stops);\n                console.log('gdynia', gdy.data);\n                return gdn.data.stops.concat(gdy.data)\n            }));\n    }\n    catch (err) {\n        console.error(err)\n        throw new Error(err)   \n    }\n}","import React, { createRef, useState } from 'react'\nimport useSWR from 'swr'\nimport { Responsive, Segment, Grid, Ref, Sticky } from 'semantic-ui-react'\n\nimport { StopList } from './List/List'\nimport StopMap from './Map/Map'\nimport { Filter } from './List/Filter/Filter'\nimport { locationSorter } from './List/sorter'\nimport { fetchLists } from './List/fetchList'\n\nconst swrOptions = {\n    revalidateOnFocus: false\n}\n\nconst Content: Function = (): JSX.Element[] | JSX.Element => {\n    const contextRef = createRef()\n    const { data, error } = useSWR(\" \", fetchLists, swrOptions)\n    const [search, setSearch] = useState<string>('')\n    const [operators, setOperators] = useState<string>('all')\n    const [location, setLocation] = useState<[number, number] | null>(null)\n    const [center, setCenter] = useState<[number | string | undefined, number | string | undefined]>([process.env.REACT_APP_DEFAULT_LOC_CENTER_LAT, process.env.REACT_APP_DEFAULT_LOC_CENTER_LON])\n    const [activeIndex, setActiveIndex] = useState<number | null>(null)\n\n\n    const handleSearch = (search: string) => {\n        setSearch(search)\n    }\n\n    const handleOperator = (operator: string) => {\n        setOperators(operator)\n    }\n\n    const handleLocation = (userLocation: [number, number]) => {\n        setLocation(userLocation);\n        setCenter(userLocation)\n    }\n\n    const manageActive = (stop: any) => {\n        setActiveIndex(stop.stopId)\n        setCenter([stop.stopLat, stop.stopLon])\n    }\n\n    const distFrom = require('distance-from')\n\n    const list = data && data\n        .map((stop: any) => {\n            stop.distance = location && Math.round(distFrom(location).to([stop.stopLat, stop.stopLon]).in('m'))\n            stop.operator = stop.stopId < 30000 ? 'ztm' : 'zkm'\n            return stop\n        })\n        .sort(locationSorter)\n        .filter((stop: any) => {\n            if (operators === 'all') return stop\n            if (operators === 'ztm' && stop.stopId < 30000) return stop\n            if (operators === 'zkm' && stop.stopId >= 30000) return stop\n        })\n        .filter((stop: any) => {\n            const stopName = stop.stopName ? stop.stopName.toLowerCase() : stop.stopDesc.toLowerCase()\n            return stopName.includes(search)\n        })\n\n\n    return <>\n        <Segment.Group>\n            <Responsive maxWidth={600}>\n                <StopList\n                    stops={list}\n                    activeIndex={activeIndex}\n                    manageActive={manageActive} />\n            </Responsive>\n            <Responsive minWidth={601}>\n                <Ref innerRef={contextRef}>\n                    <Grid columns={2}>\n                        <Grid.Column>\n                            <StopList\n                                stops={list}\n                                activeIndex={activeIndex}\n                                manageActive={manageActive} />\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Sticky context={contextRef}>\n                                <StopMap\n                                    stops={list}\n                                    center={center}\n                                    activeIndex={activeIndex}\n                                    manageActive={manageActive} />\n                            </Sticky>\n                        </Grid.Column>\n                    </Grid>\n                </Ref>\n            </Responsive>\n            <Filter\n                search={handleSearch}\n                handleOperator={handleOperator}\n                operator={operators}\n                name={search}\n                location={handleLocation} />\n        </Segment.Group>\n    </>\n}\nexport default Content","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app.css'\nimport Content from './Components/Content';\n\n\nconst App =() =>{\n  return (\n      <Content key='list' />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}