{"version":3,"sources":["Components/List/fetchList.ts","Components/List/ListElement.tsx","Components/List/List.tsx","Components/List/sorter.ts","Components/Map/Map.tsx","Components/List/Filter/LocationBtn.tsx","Components/List/Filter/Filter.jsx","utils/hooks.js","Components/Content.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["today","Date","toISOString","slice","fetchLists","a","axios","all","get","then","spread","gdn","gdy","console","log","data","stops","concat","error","Error","fetcher","url","date","response","grouper","arr","groupBy","reduce","r","stopInTrips","stopsInTrip","group","groupArr","Object","entries","result","map","elem","array","propertyName","uniqueElems","filter","e","i","findIndex","routeId","object","fromEntries","lineNames","line","ListElement","index","style","key","stopId","overflow","borderBottom","onClick","manageActive","Label","size","color","operator","content","toUpperCase","stopName","stopCode","distance","circular","Math","round","lines","StopList","props","activeIndex","height","useState","visibility","setVisibility","handleUpdate","calculations","Visibility","onOnScreen","onUpdate","itemCount","length","itemSize","width","itemData","Dimmer","active","inverted","Loader","locationSorter","require","b","stopLocA","stopLocB","comparison","StopMap","center","currCenter","setCurrCenter","distFrom","markers","stop","to","stopLat","stopLon","in","sort","iconActive","Icon","iconUrl","iconSize","iconGdn","iconGdy","Map","animate","zoom","attributionControl","onMoveend","current","target","getCenter","lat","lng","handleMoveend","Marker","position","icon","TileLayer","attribution","AttributionControl","initialMessage","type","message","LocationBtn","location","setMessage","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","latitude","longitude","accuracy","err","code","warn","setTimeout","Button","basic","undefined","navigator","geolocation","getCurrentPosition","Filter","search","name","handleOperator","filterVisibility","as","Menu","borderless","fixed","Item","fitted","Input","placeholder","link","value","onChange","toLowerCase","Dropdown","selection","text","getWindowDimensions","window","innerWidth","innerHeight","swrOptions","revalidateOnFocus","Content","contextRef","createRef","useSWR","stopTrips","setSearch","operators","setOperators","setLocation","process","setCenter","setActiveIndex","setFilterVisibility","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","list","stopDesc","includes","Responsive","maxWidth","minWidth","Ref","innerRef","Grid","columns","Column","Sticky","context","userLocation","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a20828f6.chunk.js","sourcesContent":["import axios from 'axios'\nconst date = new Date()\nconst today = date.toISOString().slice(0, 10)\n\nconst fetchGdynia = () => {\n    return axios.get('https://cors.3cstop.workers.dev/?http://api.zdiz.gdynia.pl/pt/stops')\n}\nconst fetchGdansk = () => {\n    return axios.get('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/d3e96eb6-25ad-4d6c-8651-b1eb39155945/download/stopsingdansk.json')\n}\n\n\nexport const fetchLists = async () => {\n    try {\n\n        return axios.all([fetchGdansk(), fetchGdynia()])\n            .then(axios.spread(function (gdn: any, gdy: any) {\n                console.log('gdansk', gdn.data.stops);\n                console.log('gdynia', gdy.data);\n                return gdn.data.stops.concat(gdy.data)\n            }));\n    }\n    catch (err) {\n        console.error(err)\n        throw new Error(err)\n    }\n}\n\nconst fetcher = async (url: string, date: string) => {\n    const response = await axios.get(url)\n    const data = response.data[date]\n    return data\n}\n\nconst grouper = (arr: any, groupBy: string) => {\n    return arr.reduce((r: any, a: any) => {\n        r[a[groupBy]] = [...r[a[groupBy]] || [], a];\n        return r;\n    }, {});\n}\n\nconst unique = (array: any, propertyName: string) => {\n    return array.filter((e: any, i: number) => array.findIndex((a: any) => a[propertyName] === e[propertyName]) === i);\n}\n\nexport const stopInTrips = async () => {\n    const response = await fetcher('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/3115d29d-b763-4af5-93f6-763b835967d6/download/stopsintrips.json', today)\n    const data = response.stopsInTrip\n    let group = grouper(data, 'stopId')\n    let groupArr = Object.entries(group)\n\n    let result = groupArr.map((elem: any) => {\n        const uniqueElems = unique(elem[1], 'routeId').reduce((r: any, a: any) => {\n            r = [...r || [], a.routeId];\n            return r;\n        }, []);\n        return [[elem[0]], uniqueElems]\n    })\n\n    let object = Object.fromEntries(result)\n    // console.log(\"Obje\", object);\n    // console.log(\"group\", result);\n    return object\n}\n\nconst trips = async () => {\n    const response = await fetcher('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/b15bb11c-7e06-4685-964e-3db7775f912f/download/trips.json', today)\n    const data = response.trips\n    return data\n}\n\nconst routes = async () => {\n    const response = await fetcher('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/22313c56-5acf-41c7-a5fd-dc5dc72b3851/download/routes.json', today)\n    const data = response.routes\n    return data\n}\n\nexport const lines = async () => {\n    const stopTrip = await stopInTrips()\n    const trip = await trips()\n    const route = await routes()\n\n    const array = Object.entries(stopTrip).slice(0, 10)\n    const result = array.map((stop: any) => {\n        const modifiedStop = stop[1].map((oneTrip: any) => {\n\n            let filteredRoutes = route.filter((oneRoute: any) => {\n                return oneRoute.routeId === oneTrip\n            })\n            return filteredRoutes\n        })\n        return { [stop[0]]: modifiedStop }\n    })\n    console.log(result);\n}\n\nexport  const lineNames = (line: number) => {\n    if (line === 10603) {\n        return 'K'\n    } else if (line === 10605) {\n        return 'R'\n    } else if (line === 10606) {\n        return 'S'\n    } else if (line === 10609) {\n        return 'Z'\n    } else if (line === 10602) {\n        return 'J'\n    } else if (line >= 10000 && line < 10500 && line > 10399) {\n        return `N${line - 10000 - 400}`\n    } else if (line < 500 && line > 399) {\n        return `N${line - 400}`\n    }\n    else if (line >= 10000) {\n        return line - 10000\n    }\n    else if (line < 900 && line > 799) {\n        return `T${line - 800}`\n    }\n    return line\n}","import React from 'react'\nimport { Label } from 'semantic-ui-react'\nimport { ListChildComponentProps } from 'react-window'\nimport { lineNames } from './fetchList';\n\n\nconst ListElement = ({ index, style, data }: ListChildComponentProps) => {\n    return <div key={data.stops[index].stopId}\n        style={{ overflow: 'hidden', borderBottom: '1px solid lightgrey', ...style }}\n        onClick={() => data.manageActive(data.stops[index])}\n    >\n        <Label size='tiny' color={data.stops[index].operator === 'ztm' ? 'red' : 'blue'} content={data.stops[index].operator.toUpperCase()} />\n        {data.stops[index].stopName + ' ' || data.stops[index].stopDesc + ' '}\n        {data.stops[index].stopCode && data.stops[index].stopCode}\n        {data.stops[index].distance && <Label circular color='olive' size='tiny' content={`${data.stops[index].distance >= 1000 ? (Math.round(data.stops[index].distance / 100)) / 10 + 'km' : data.stops[index].distance + 'm'}`} />}\n        {data.lines && data.lines[data.stops[index].stopId]\n            ? <>Linie: {data.lines[data.stops[index].stopId].map((line: any) => <Label key={line} circular size='tiny' content={lineNames(line)} />)} </>\n            : null}\n    </div>\n\n}\nexport default ListElement","import React, { useState } from 'react'\nimport { Dimmer, Loader, Visibility } from 'semantic-ui-react'\nimport { FixedSizeList as List } from 'react-window';\nimport ListElement from './ListElement'\n\n\nconst StopList = (props: any) => {\n    const { stops, manageActive, activeIndex, lines, height }: any = props\n    const [visibility, setVisibility] = useState<any>(350)\n\n    const handleUpdate = (e: any, { calculations }: any): void => setVisibility(calculations)\n\n    if (!stops) {\n        return <Dimmer active inverted>\n            <Loader inverted content='Pobieranie listy przystanków' />\n        </Dimmer>\n\n    }\n    return <Visibility onOnScreen={handleUpdate} onUpdate={handleUpdate}>\n        <List\n            height={height || 850}\n            itemCount={stops.length}\n            itemSize={45}\n            width={visibility.width}\n            itemData={{\n                stops,\n                manageActive,\n                lines\n            }}\n        >\n            {ListElement}\n        </List>\n    </Visibility>\n\n}\n\nexport { StopList }","const distFrom = require('distance-from')\n\nexport const sorter = (a: Object | any, b: Object | any) => {\n    const stopNameA = a.stopDesc.toUpperCase();\n    const stopNameB = b.stopDesc.toUpperCase();\n    let comparison = 0;\n    if (stopNameA > stopNameB) {\n        comparison = 1;\n    } else if (stopNameA < stopNameB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nexport const locationSorter = (a: Object | any, b: Object | any) => {\n    const stopLocA = a.distance;\n    const stopLocB = b.distance;\n    \n    let comparison = 0;\n    if (stopLocA > stopLocB) {\n        comparison = 1;\n    } else if (stopLocA < stopLocB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n","import React, { useState } from \"react\";\nimport { Map, Marker, Popup, TileLayer, AttributionControl } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { locationSorter } from \"../List/sorter\";\n\nconst StopMap: Function = ({ stops, center, manageActive, activeIndex }: any): JSX.Element[] | JSX.Element => {\n\n    const [currCenter, setCurrCenter] = useState(center)\n\n    const handleMoveend = (e: any) => {\n        const current = e.target.getCenter()\n        setCurrCenter([current.lat, current.lng])\n    }\n\n    const distFrom = require('distance-from')\n\n    const markers = stops ?\n        stops.\n            map((stop: any) => {\n                stop.distance = Math.round(distFrom(currCenter).to([stop.stopLat, stop.stopLon]).in('m'))\n                return stop\n            })\n            .sort(locationSorter)\n            .slice(0, 80)\n        : null\n\n    const iconActive = new Icon({\n        iconUrl: '/3CStop/assets/map-active.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdn = new Icon({\n        iconUrl: '/3CStop/assets/map-gdn.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdy = new Icon({\n        iconUrl: '/3CStop/assets/map-gdy.svg',\n        iconSize: [25, 30],\n    })\n    const iconFav = new Icon({\n        iconUrl: '/3CStop/assets/map-fav.svg',\n        iconSize: [25, 25],\n    })\n\n    return (\n        <Map\n            animate\n            center={center}\n            zoom={15}\n            attributionControl={false}\n            onMoveend={(e: any) => handleMoveend(e)}>\n            {markers && markers.map((stop: any) => (\n                <Marker\n                    key={stop.stopId}\n                    position={\n                        [stop.stopLat, stop.stopLon]\n                    }\n                    onClick={() => {\n                        manageActive(stop)\n                    }}\n\n                    icon={activeIndex && stop.stopId === activeIndex\n                        ? iconActive\n                        : stop.operator === 'zkm' ? iconGdy : iconGdn}\n                />\n            ))}\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <AttributionControl position=\"topright\" />\n        </Map>\n    );\n}\n\n\nexport default StopMap","import React, { useState } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\ninterface MessageType {\n    type: \"grey\" | \"red\" | \"orange\" | \"yellow\" | \"olive\" | \"green\" | \"teal\" | \"blue\" | \"violet\" | \"purple\" | \"pink\" | \"brown\" | \"black\" | undefined;\n    message: string | null\n}\n\ntype AppProps = { location: (location: Array<[Number, Number]>) => void }\n\nconst initialMessage: MessageType = {\n    type: 'grey',\n    message: ''\n}\n\nexport const LocationBtn = ({ location }: AppProps) => {\n    const [message, setMessage] = useState<MessageType>(initialMessage)\n\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n    };\n\n    const success = (pos: Object | any) => {\n        const crd = pos.coords;\n        setMessage({\n            type: 'green',\n            message: `${crd.latitude}, ${crd.longitude}`\n        })\n        location([crd.latitude, crd.longitude])\n        console.log('Your current position is:');\n        console.log(`Latitude : ${crd.latitude}`);\n        console.log(`Longitude: ${crd.longitude}`);\n        console.log(`More or less ${crd.accuracy} meters.`);\n    }\n\n    const error = (err: Object | any) => {\n        setMessage({\n            type: 'red',\n            message: `ERROR(${err.code}): ${err.message}`\n        })\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n        if (message.type === 'red') {\n            setTimeout(() => {\n                setMessage({\n                    type: 'grey',\n                    message: null\n                })\n            }, 3500);\n        }\n    }\n    const getLocation = () => {\n        navigator.geolocation.getCurrentPosition(success, error, options);\n    }\n\n    return <Button\n        basic\n        icon='location arrow'\n        color={message.type || undefined}\n        onClick={getLocation} >\n    </Button>\n}","import React from 'react'\nimport { Input, Dropdown, Icon, Menu, Visibility } from 'semantic-ui-react'\nimport { LocationBtn } from './LocationBtn';\n\nconst Filter = ({ search, name, operator, handleOperator, location, filterVisibility }) => {\n\n    const handleVisibility = (e, { calculations }) => {\n        filterVisibility(calculations)\n        console.log(calculations);\n\n    }\n\n\n    const handleChange = ({ target }) => {\n        search(target.value.toLowerCase());\n    }\n\n    const handleClear = () => {\n        search('')\n    }\n\n    const handleDropdownChange = (e, { value }) => {\n        console.log(value);\n        handleOperator(value)\n\n    }\n\n    const options = [\n        { key: 'ztm', text: 'ZTM Gdańsk', value: 'ztm' },\n        { key: 'zkm', text: 'ZKM Gdynia', value: 'zkm' },\n        { key: 'all', text: 'Wszyscy', value: 'all' }\n    ]\n\n    return         <Visibility as={Menu} onUpdate={handleVisibility} borderless fixed='bottom'>\n            <Menu.Item fitted >\n                <LocationBtn location={location} />\n            </Menu.Item>\n            <Menu.Item fitted >\n                <Input\n                    placeholder='Wyszukaj...'\n                    name='search'\n                    icon={name.length > 0 && <Icon name='cancel' circular link onClick={handleClear} />}\n                    value={name}\n                    onChange={handleChange}\n                />\n            </Menu.Item>\n            <Menu.Item fitted position='right'>\n                <Dropdown\n\n                    placeholder='Przewoźnik'\n                    selection\n                    options={options}\n                    onChange={handleDropdownChange}\n                    value={operator}\n                />\n            </Menu.Item>\n        </Visibility>\n   \n\n\n}\n\nexport { Filter }\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { createRef, useState } from 'react'\nimport useSWR from 'swr'\nimport { Grid, Ref, Sticky, Responsive, Visibility } from 'semantic-ui-react'\n\nimport { StopList } from './List/List'\nimport StopMap from './Map/Map'\nimport { Filter } from './List/Filter/Filter'\nimport { locationSorter } from './List/sorter'\nimport { fetchLists, stopInTrips, lines } from './List/fetchList'\nimport { Stop } from './Stop/Stop'\nimport {useWindowDimensions} from '../utils/hooks'\n\nconst swrOptions = {\n    revalidateOnFocus: false\n}\n\nconst Content: Function = (): JSX.Element[] | JSX.Element => {\n    const contextRef = createRef()\n    const { data: stops, error } = useSWR(\" \", fetchLists, swrOptions)\n    const { data: stopTrips } = useSWR(\"stopInTrips\", stopInTrips, swrOptions)\n    const [search, setSearch] = useState<string>('')\n    const [operators, setOperators] = useState<string>('all')\n    const [location, setLocation] = useState<[number, number] | null>(null)\n    const [center, setCenter] = useState<[number | string | undefined, number | string | undefined]>([process.env.REACT_APP_DEFAULT_LOC_CENTER_LAT, process.env.REACT_APP_DEFAULT_LOC_CENTER_LON])\n    const [activeIndex, setActiveIndex] = useState<number | null>(null)\n    // const [visibility, setVisibility] = useState<any>(750)\n    const [filterVisibility, setFilterVisibility] = useState<any>(40)\n    const { height, width } = useWindowDimensions();\n\n\n    // const handleVisibility = (e: any, { calculations }: any): void => setVisibility(calculations)\n\n    const handleFilterVisibility = (calculations: any) => setFilterVisibility(calculations)\n\n    const handleSearch = (search: string) => {\n        setSearch(search)\n    }\n\n    const handleOperator = (operator: string) => {\n        setOperators(operator)\n    }\n\n    const handleLocation = (userLocation: [number, number]) => {\n        setLocation(userLocation);\n        setCenter(userLocation)\n    }\n\n    const manageActive = (stop: any) => {\n        setActiveIndex(stop.stopId)\n        setCenter([stop.stopLat, stop.stopLon])\n    }\n\n    const resetActiveIndex = () => {\n        setActiveIndex(null)\n    }\n\n    const distFrom = require('distance-from')\n\n    const list = stops && stops\n        .map((stop: any) => {\n            stop.distance = location && Math.round(distFrom(location).to([stop.stopLat, stop.stopLon]).in('m'))\n            stop.operator = stop.stopId < 30000 ? 'ztm' : 'zkm'\n            return stop\n        })\n        .sort(locationSorter)\n        .filter((stop: any) => {\n            if (operators === 'all') {\n                return stop\n            }\n            return operators === stop.operator\n        })\n        .filter((stop: any) => {\n            const stopName = stop.stopName ? stop.stopName.toLowerCase() : stop.stopDesc.toLowerCase()\n            return stopName.includes(search)\n        })\n\n    return <>\n    {/* <Visibility onUpdate={handleVisibility}> */}\n        <Responsive maxWidth={550}>\n            <StopList\n                height={height - filterVisibility.height}\n                stops={list}\n                lines={stopTrips}\n                activeIndex={activeIndex}\n                manageActive={manageActive} />\n            {/* {activeIndex && <Stop stopId={activeIndex} reset={resetActiveIndex} />} */}\n        </Responsive>\n        <Responsive minWidth={551} >\n            <Ref innerRef={contextRef}>\n                <Grid columns={2} >\n                    <Grid.Column>\n                        <StopList\n                            height={height - filterVisibility.height}\n                            stops={list}\n                            lines={stopTrips}\n                            activeIndex={activeIndex}\n                            manageActive={manageActive} />\n                        {/* {activeIndex && <Stop stopId={activeIndex} reset={resetActiveIndex} />} */}\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Sticky context={contextRef}>\n                            <StopMap\n                                stops={list}\n                                center={center}\n                                activeIndex={activeIndex}\n                                manageActive={manageActive} />\n                        </Sticky>\n                    </Grid.Column>\n\n                </Grid>\n            </Ref>\n        </Responsive>\n    {/* </Visibility> */}\n        <Filter\n            filterVisibility={handleFilterVisibility}\n            search={handleSearch}\n            handleOperator={handleOperator}\n            operator={operators}\n            name={search}\n            location={handleLocation} />\n    </>\n}\nexport default Content","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app.css'\nimport Content from './Components/Content';\n\n\nconst App =() =>{\n  return (\n      <Content key='list' />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}