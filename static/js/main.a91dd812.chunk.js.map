{"version":3,"sources":["Components/List/ListElement.tsx","Components/List/List.tsx","Components/List/sorter.ts","Components/Map/Map.tsx","Components/List/Filter/LocationBtn.tsx","Components/List/Filter/Filter.jsx","Components/List/fetchList.ts","Components/Stop/gdanskFetcher.js","Components/Stop/gdyniaFetcher.js","Components/Stop/GdyniaStop.jsx","Components/Stop/Stop.tsx","Components/Content.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["forwardRef","ref","stop","activeIndex","manageActive","lines","useEffect","stopId","current","scrollIntoView","behavior","block","key","List","Content","onClick","console","log","Header","Label","size","color","operator","content","toUpperCase","stopName","stopCode","circular","distance","Math","round","Description","map","line","StopList","stops","refs","reduce","acc","value","React","createRef","list","Item","className","divided","verticalAlign","Dimmer","active","inverted","Loader","locationSorter","require","a","b","stopLocA","stopLocB","comparison","StopMap","center","useState","currCenter","setCurrCenter","distFrom","markers","to","stopLat","stopLon","in","sort","slice","iconActive","Icon","iconUrl","iconSize","iconGdn","iconGdy","Map","animate","zoom","attributionControl","onMoveend","e","target","getCenter","lat","lng","handleMoveend","Marker","position","icon","TileLayer","url","attribution","AttributionControl","initialMessage","type","message","LocationBtn","location","setMessage","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","latitude","longitude","accuracy","error","err","code","warn","setTimeout","Button","basic","undefined","navigator","geolocation","getCurrentPosition","Filter","search","name","handleOperator","Menu","compact","borderless","fixed","fitted","Input","placeholder","length","link","onChange","toLowerCase","Dropdown","selection","text","today","Date","toISOString","fetchLists","axios","all","get","then","spread","gdn","gdy","data","concat","Error","fetcher","date","response","grouper","arr","groupBy","r","stopInTrips","stopsInTrip","group","groupArr","Object","entries","result","elem","array","propertyName","uniqueElems","filter","i","findIndex","tripId","object","fromEntries","fetchGdanskStop","id","fetch","contenttype","headers","charset","substring","indexOf","arrayBuffer","ab","dataView","DataView","TextDecoder","decode","replace","fetchGdyniaStop","delay","GdyniaStop","stopid","table","element","shortName","headSign","delayDesc","style","minWidth","Stop","reset","setTable","gdyniaStop","setGdyniaStop","loading","setLoading","getGdansk","getGdynia","__html","Placeholder","Line","floated","dangerouslySetInnerHTML","swrOptions","revalidateOnFocus","contextRef","useSWR","stopTrips","setSearch","operators","setOperators","setLocation","process","setCenter","setActiveIndex","resetActiveIndex","stopDesc","includes","Responsive","maxWidth","Ref","innerRef","Grid","columns","Column","Sticky","context","userLocation","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a91dd812.chunk.js","sourcesContent":["import React, { forwardRef, useEffect } from 'react'\nimport { List, Label } from 'semantic-ui-react'\n\n\nconst ListElement = ({ stop, activeIndex, manageActive, lines }: any, ref: any) => {\n    useEffect(() => {\n        if (activeIndex === stop.stopId) {\n            ref.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center',\n            });\n        }\n    }, [activeIndex, stop.stopId, ref, lines])\n\n    const handleClick = () => {\n        manageActive(stop)\n        console.log(stop)\n    }\n\n    return <div ref={ref} key={stop.stopId} >\n        <List.Content onClick={handleClick}>\n            <List.Header>\n                <Label size='tiny' color={stop.operator === 'ztm' ? 'red' : 'blue'} content={stop.operator.toUpperCase()} />\n                {stop.stopName}\n                {stop.stopCode && <Label circular size='tiny' content={stop.stopCode} />}\n                {stop.distance && <Label circular color='olive' size='tiny' content={`${stop.distance >= 1000 ? (Math.round(stop.distance / 100)) / 10 + 'km' : stop.distance + 'm'}`} />}\n            </List.Header>\n            <List.Description>\n                Linie: {lines && lines.map((line: any) => <Label key={line} circular size='tiny' content={line} />)}\n            </List.Description>\n        </List.Content>\n    </div>\n\n\n}\nexport default forwardRef(ListElement)","import React from 'react'\nimport { List, Dimmer, Loader } from 'semantic-ui-react'\n// import useSWR from 'swr'\n\nimport ListElement from './ListElement'\n// import { stopInTrips } from './fetchList'\n\nconst swrOptions = {\n    revalidateOnFocus: false\n}\n\nconst StopList = ({ stops, manageActive, activeIndex, lines }: any) => {\n\n\n    const refs = stops && stops.reduce((acc: any, value: any) => {\n        acc[value.stopId] = React.createRef();\n        return acc;\n    }, {});\n\n    const list = stops ?\n        stops.map((stop: any) =>\n            <List.Item key={stop.stopId} className={activeIndex === stop.stopId ? 'main-list__item--active' : 'main-list__item'}>\n                <ListElement\n                    lines={lines ? lines[stop.stopId] : null}\n                    ref={refs[stop.stopId]}\n                    stop={stop}\n                    activeIndex={activeIndex}\n                    manageActive={manageActive} />\n            </List.Item>)\n        : null\n\n    if (!stops) {\n        return <Dimmer active inverted>\n            <Loader inverted content='Pobieranie listy przystanków' />\n        </Dimmer>\n\n    }\n    return <List className={activeIndex ? 'main-list--short' : 'main-list'} divided verticalAlign='middle'>\n        {list}\n    </List>\n\n}\n\nexport { StopList }","const distFrom = require('distance-from')\n\nexport const sorter = (a: Object | any, b: Object | any) => {\n    const stopNameA = a.stopDesc.toUpperCase();\n    const stopNameB = b.stopDesc.toUpperCase();\n    let comparison = 0;\n    if (stopNameA > stopNameB) {\n        comparison = 1;\n    } else if (stopNameA < stopNameB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nexport const locationSorter = (a: Object | any, b: Object | any) => {\n    const stopLocA = a.distance;\n    const stopLocB = b.distance;\n    \n    let comparison = 0;\n    if (stopLocA > stopLocB) {\n        comparison = 1;\n    } else if (stopLocA < stopLocB) {\n        comparison = -1;\n    }\n    return comparison;\n}\n","import React, { useState } from \"react\";\nimport { Map, Marker, Popup, TileLayer, AttributionControl } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport { locationSorter } from \"../List/sorter\";\n\nconst StopMap: Function = ({ stops, center, manageActive, activeIndex }: any): JSX.Element[] | JSX.Element => {\n\n    const [currCenter, setCurrCenter] = useState(center)\n\n    const handleMoveend = (e: any) => {\n        const current = e.target.getCenter()\n        setCurrCenter([current.lat, current.lng])\n    }\n\n    const distFrom = require('distance-from')\n\n    const markers = stops ?\n        stops.\n            map((stop: any) => {\n                stop.distance = Math.round(distFrom(currCenter).to([stop.stopLat, stop.stopLon]).in('m'))\n                return stop\n            })\n            .sort(locationSorter)\n            .slice(0, 80)\n        : null\n\n    const iconActive = new Icon({\n        iconUrl: '/3CStop/assets/map-active.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdn = new Icon({\n        iconUrl: '/3CStop/assets/map-gdn.svg',\n        iconSize: [25, 30],\n    })\n    const iconGdy = new Icon({\n        iconUrl: '/3CStop/assets/map-gdy.svg',\n        iconSize: [25, 30],\n    })\n    const iconFav = new Icon({\n        iconUrl: '/3CStop/assets/map-fav.svg',\n        iconSize: [25, 25],\n    })\n\n    return (\n        <Map\n            animate\n            center={center}\n            zoom={15}\n            attributionControl={false}\n            onMoveend={(e: any) => handleMoveend(e)}>\n            {markers && markers.map((stop: any) => (\n                <Marker\n                    key={stop.stopId}\n                    position={\n                        [stop.stopLat, stop.stopLon]\n                    }\n                    onClick={() => {\n                        manageActive(stop)\n                    }}\n\n                    icon={activeIndex && stop.stopId === activeIndex\n                        ? iconActive\n                        : stop.operator === 'zkm' ? iconGdy : iconGdn}\n                />\n            ))}\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <AttributionControl position=\"topright\" />\n        </Map>\n    );\n}\n\n\nexport default StopMap","import React, { useState } from 'react'\nimport { Button } from 'semantic-ui-react'\n\n\ninterface MessageType {\n    type: \"grey\" | \"red\" | \"orange\" | \"yellow\" | \"olive\" | \"green\" | \"teal\" | \"blue\" | \"violet\" | \"purple\" | \"pink\" | \"brown\" | \"black\" | undefined;\n    message: string | null\n}\n\ntype AppProps = { location: (location: Array<[Number, Number]>) => void }\n\nconst initialMessage: MessageType = {\n    type: 'grey',\n    message: ''\n}\n\nexport const LocationBtn = ({ location }: AppProps) => {\n    const [message, setMessage] = useState<MessageType>(initialMessage)\n\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n    };\n\n    const success = (pos: Object | any) => {\n        const crd = pos.coords;\n        setMessage({\n            type: 'green',\n            message: `${crd.latitude}, ${crd.longitude}`\n        })\n        location([crd.latitude, crd.longitude])\n        console.log('Your current position is:');\n        console.log(`Latitude : ${crd.latitude}`);\n        console.log(`Longitude: ${crd.longitude}`);\n        console.log(`More or less ${crd.accuracy} meters.`);\n    }\n\n    const error = (err: Object | any) => {\n        setMessage({\n            type: 'red',\n            message: `ERROR(${err.code}): ${err.message}`\n        })\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n        if (message.type === 'red') {\n            setTimeout(() => {\n                setMessage({\n                    type: 'grey',\n                    message: null\n                })\n            }, 3500);\n        }\n    }\n    const getLocation = () => {\n        navigator.geolocation.getCurrentPosition(success, error, options);\n    }\n\n    return <Button\n        basic\n        icon='location arrow'\n        color={message.type || undefined}\n        onClick={getLocation} >\n    </Button>\n}","import React from 'react'\nimport { Input, Dropdown, Icon, Menu } from 'semantic-ui-react'\nimport { LocationBtn } from './LocationBtn';\n\nconst Filter = ({ search, name, operator, handleOperator, location }) => {\n    const handleChange = ({ target }) => {\n        search(target.value.toLowerCase());\n    }\n\n    const handleClear = () => {\n        search('')\n    }\n\n    const handleDropdownChange = (e, { value }) => {\n        console.log(value);\n        handleOperator(value)\n\n    }\n\n    const options = [\n        { key: 'ztm', text: 'ZTM Gdańsk', value: 'ztm' },\n        { key: 'zkm', text: 'ZKM Gdynia', value: 'zkm' },\n        { key: 'all', text: 'Wszyscy', value: 'all' }\n    ]\n\n    return <Menu compact borderless fixed='bottom' >\n        <Menu.Item fitted >\n            <LocationBtn location={location}/>\n        </Menu.Item>\n        <Menu.Item fitted >\n            <Input\n                placeholder='Wyszukaj...'\n                name='search'\n                icon={name.length > 0 && <Icon name='cancel' circular link onClick={handleClear} />}\n                value={name}\n                onChange={handleChange}\n            />\n        </Menu.Item>\n        <Menu.Item fitted position='right'>\n            <Dropdown\n\n                placeholder='Przewoźnik'\n                selection\n                options={options}\n                onChange={handleDropdownChange}\n                value={operator}\n            />\n        </Menu.Item>\n    </Menu>\n\n}\n\nexport { Filter }\n","import axios from 'axios'\nconst date = new Date()\nconst today = date.toISOString().slice(0, 10)\n\nconst fetchGdynia = () => {\n    return axios.get('https://cors.3cstop.workers.dev/?http://api.zdiz.gdynia.pl/pt/stops')\n}\nconst fetchGdansk = () => {\n    return axios.get('https://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/d3e96eb6-25ad-4d6c-8651-b1eb39155945/download/stopsingdansk.json')\n}\n\n\nexport const fetchLists = async () => {\n    try {\n\n        return axios.all([fetchGdansk(), fetchGdynia()])\n            .then(axios.spread(function (gdn: any, gdy: any) {\n                console.log('gdansk', gdn.data.stops);\n                console.log('gdynia', gdy.data);\n                return gdn.data.stops.concat(gdy.data)\n            }));\n    }\n    catch (err) {\n        console.error(err)\n        throw new Error(err)\n    }\n}\n\nconst fetcher = async (url: string, date: string) => {\n    const response = await axios.get(url)\n    const data = response.data[date]\n    return data\n}\n\nconst grouper = (arr: any, groupBy: string) => {\n    return arr.reduce((r: any, a: any) => {\n        r[a[groupBy]] = [...r[a[groupBy]] || [], a];\n        return r;\n    }, {});\n}\n\nconst unique = (array: any, propertyName: string) => {\n    return array.filter((e: any, i: number) => array.findIndex((a: any) => a[propertyName] === e[propertyName]) === i);\n}\n\nexport const stopInTrips = async () => {\n    const response = await fetcher('http://ckan.multimediagdansk.pl/dataset/c24aa637-3619-4dc2-a171-a23eec8f2172/resource/3115d29d-b763-4af5-93f6-763b835967d6/download/stopsintrips.json', today)\n    const data = response.stopsInTrip\n    let group = grouper(data, 'stopId')\n    let groupArr = Object.entries(group)\n\n    let result = groupArr.map((elem: any) => {\n        const uniqueElems = unique(elem[1], 'tripId').reduce((r: any, a: any) => {\n            r = [...r || [], a.tripId];\n            return r;\n        }, []);\n        return [[elem[0]], uniqueElems]\n    })\n\n    let object = Object.fromEntries(result)\n    // console.log(\"Obje\", object);\n    // console.log(\"group\", result);\n    return object\n}","export const fetchGdanskStop = (id) => {\n    const toDelete = '<p style=\"font-size: 8pt; font-style:italic;margin-top: 0;text-align:center;\">Źródło danych: narzędzie oprogramowania SIP opracowane przez <a href=\"http://www.gmv.com\">GMV</a></p>'\n    const corsProxy = 'https://cors.3cstop.workers.dev/?'\n    const url = `${corsProxy}https://ztm.gda.pl/rozklady/pobierz_SIP.php?n[0]=${id}`\n    return fetch(url)\n        .then(response => {\n            const contenttype = response.headers.get(\"content-type\");\n            const charset = contenttype.substring(contenttype.indexOf(\"charset=\") + 8);\n            return response.arrayBuffer()\n                .then(ab => {\n                    const dataView = new DataView(ab);\n                    const decoder = new TextDecoder(charset);\n                    const decoded = decoder.decode(dataView);\n                    return decoded.replace(toDelete, '')\n                })\n        })\n}","import axios from 'axios'\n\nexport const fetchGdyniaStop = async (id) => {\n    try {\n        const corsProxy = 'https://cors.3cstop.workers.dev/?'\n        const url=`${corsProxy}https://zkmgdynia.pl/stopsAPI/getDisplay/${id}`;\n        const { data } = await axios.get(url);\n        return data.delay\n    }\n    catch (err) {\n        console.log(err);  \n    }\n}","import React from 'react'\n\nexport const GdyniaStop = ({ stop, stopid }) => {\n\n    const table = stop && stop.map(element => {\n        return <tr key={element.delay + stopid}><td>{element.shortName}</td><td>{element.headSign}</td><td>{element.delayDesc}</td></tr>\n    })\n\n    return stop && <div><table>\n        <thead><tr><th>Linia</th><th style={{ minWidth: \"200px\" }}>Kierunek</th><th>Odjazd</th></tr></thead>\n        <tbody>{table}</tbody>\n    </table>\n    </div>\n\n}","import React, { useState, useEffect } from 'react'\nimport { fetchGdanskStop } from './gdanskFetcher';\nimport { fetchGdyniaStop } from './gdyniaFetcher';\nimport { GdyniaStop } from './GdyniaStop';\nimport { Placeholder, Button } from 'semantic-ui-react';\n\n\ninterface HtmlTable {\n    __html: string\n}\n\nexport const Stop: Function = ({ stopId, reset }: any): JSX.Element[] | JSX.Element => {\n    const [table, setTable] = useState<HtmlTable | undefined>();\n    const [gdyniaStop, setGdyniaStop] = useState(null)\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        if (stopId < 30000) {\n            getGdansk(stopId)\n        }\n        else { getGdynia(stopId) }\n\n    }, [stopId])\n\n    const getGdansk = async (id: number) => {\n        setLoading(true)\n        const stop = await fetchGdanskStop(id)\n        setTable({\n            __html: stop\n        })\n        setLoading(false)\n    }\n\n    const getGdynia = async (id: number) => {\n        setLoading(true)\n        const stop = await fetchGdyniaStop(id)\n        setGdyniaStop(stop)\n        setLoading(false)\n    }\n\n    return loading ?\n        <Placeholder>\n            <Placeholder.Line />\n            <Placeholder.Line />\n            <Placeholder.Line />\n            <Placeholder.Line />\n            <Placeholder.Line />\n        </Placeholder>\n\n        : <div className='stop'> <Button floated='right' icon='cancel' circular onClick={reset} />\n            {stopId < 30000\n                ? <div dangerouslySetInnerHTML={table}></div>\n                : <GdyniaStop stopid={stopId} stop={gdyniaStop} />}\n        </div>\n}","import React, { createRef, useState } from 'react'\nimport useSWR from 'swr'\nimport { Grid, Ref, Sticky, Responsive } from 'semantic-ui-react'\n\nimport { StopList } from './List/List'\nimport StopMap from './Map/Map'\nimport { Filter } from './List/Filter/Filter'\nimport { locationSorter } from './List/sorter'\nimport { fetchLists, stopInTrips } from './List/fetchList'\nimport { Stop } from './Stop/Stop'\n\nconst swrOptions = {\n    revalidateOnFocus: false\n}\n\nconst Content: Function = (): JSX.Element[] | JSX.Element => {\n    const contextRef = createRef()\n    const { data: stops, error } = useSWR(\" \", fetchLists, swrOptions)\n    const { data: stopTrips } = useSWR(\"stopInTrips\", stopInTrips, swrOptions)\n    const [search, setSearch] = useState<string>('')\n    const [operators, setOperators] = useState<string>('all')\n    const [location, setLocation] = useState<[number, number] | null>(null)\n    const [center, setCenter] = useState<[number | string | undefined, number | string | undefined]>([process.env.REACT_APP_DEFAULT_LOC_CENTER_LAT, process.env.REACT_APP_DEFAULT_LOC_CENTER_LON])\n    const [activeIndex, setActiveIndex] = useState<number | null>(null)\n\n\n    const handleSearch = (search: string) => {\n        setSearch(search)\n    }\n\n    const handleOperator = (operator: string) => {\n        setOperators(operator)\n    }\n\n    const handleLocation = (userLocation: [number, number]) => {\n        setLocation(userLocation);\n        setCenter(userLocation)\n    }\n\n    const manageActive = (stop: any) => {\n        setActiveIndex(stop.stopId)\n        setCenter([stop.stopLat, stop.stopLon])\n    }\n\n    const resetActiveIndex = () => {\n        setActiveIndex(null)\n    }\n\n    const distFrom = require('distance-from')\n\n    const list = stops && stops\n        .map((stop: any) => {\n            stop.distance = location && Math.round(distFrom(location).to([stop.stopLat, stop.stopLon]).in('m'))\n            stop.operator = stop.stopId < 30000 ? 'ztm' : 'zkm'\n            return stop\n        })\n        .sort(locationSorter)\n        .filter((stop: any) => {\n            if (operators === 'all') {\n                return stop\n            }\n            return operators === stop.operator\n        })\n        .filter((stop: any) => {\n            const stopName = stop.stopName ? stop.stopName.toLowerCase() : stop.stopDesc.toLowerCase()\n            return stopName.includes(search)\n        })\n\n    return <>\n        <Responsive maxWidth={550}>\n            <StopList\n                stops={list}\n                lines={stopTrips}\n                activeIndex={activeIndex}\n                manageActive={manageActive} />\n            {activeIndex && <Stop stopId={activeIndex} reset={resetActiveIndex} />}\n        </Responsive>\n        <Responsive minWidth={551} >\n            <Ref innerRef={contextRef}>\n                <Grid columns={2} >\n                    <Grid.Column>\n                        <StopList\n                            stops={list}\n                            lines={stopTrips}\n                            activeIndex={activeIndex}\n                            manageActive={manageActive} />\n                        {activeIndex && <Stop stopId={activeIndex} reset={resetActiveIndex} />}\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Sticky context={contextRef}>\n                            <StopMap\n                                stops={list}\n                                center={center}\n                                activeIndex={activeIndex}\n                                manageActive={manageActive} />\n                        </Sticky>\n                    </Grid.Column>\n\n                </Grid>\n            </Ref>\n        </Responsive>\n        <Filter\n            search={handleSearch}\n            handleOperator={handleOperator}\n            operator={operators}\n            name={search}\n            location={handleLocation} />\n    </>\n}\nexport default Content","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app.css'\nimport Content from './Components/Content';\n\n\nconst App =() =>{\n  return (\n      <Content key='list' />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}